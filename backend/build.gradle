plugins {
    id 'java'
    id 'org.springframework.boot' version '2.5.0'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'com.diffplug.spotless' version '5.12.5'
}

group = 'se.ifmo.mobile'
version = '1.0'
sourceCompatibility = '16'
targetCompatibility = '16'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-data-mongodb-reactive'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'
    implementation 'org.springdoc:springdoc-openapi-webflux-ui:1.5.8'
    implementation 'com.googlecode.libphonenumber:libphonenumber:8.12.23'

    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    compileOnly 'io.jsonwebtoken:jjwt-api:0.11.2'
    compileOnly 'org.projectlombok:lombok'

    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
    annotationProcessor 'org.projectlombok:lombok'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'de.flapdoodle.embed:de.flapdoodle.embed.mongo'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.springframework.security:spring-security-test'

    testCompileOnly 'org.projectlombok:lombok'

    testAnnotationProcessor 'org.projectlombok:lombok'

    modules {
        module('org.springframework.boot:spring-boot-starter-logging') {
            replacedBy('org.springframework.boot:spring-boot-starter-log4j2')
        }
    }
}

test {
    useJUnitPlatform()
}

springBoot {
    buildInfo()
}

processResources {
    expand(project.properties)
}

spotless {
    encoding 'UTF-8'
    java {
        removeUnusedImports()
        googleJavaFormat('1.10.0')
    }
    format 'misc', {
        target '*.gradle', '**/*.properties', '.gitignore', 'Dockerfile', 'docker-compose.yml'
        trimTrailingWhitespace()
        indentWithSpaces()
        endWithNewline()
    }
}
